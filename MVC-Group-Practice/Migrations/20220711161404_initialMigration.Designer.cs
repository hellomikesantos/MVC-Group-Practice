// <auto-generated />
using System;
using MVC_Group_Practice.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVC_Group_Practice.Migrations
{
    [DbContext(typeof(MovieDatabaseContext))]
    [Migration("20220711161404_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MVC_Group_Practice.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Actor", (string)null);
                });

            modelBuilder.Entity("MVC_Group_Practice.Models.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genre", (string)null);
                });

            modelBuilder.Entity("MVC_Group_Practice.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.ToTable("Movie", (string)null);
                });

            modelBuilder.Entity("MVC_Group_Practice.Models.MovieActor", b =>
                {
                    b.Property<int?>("ActorId")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.HasIndex("ActorId");

                    b.HasIndex("MovieId");

                    b.ToTable("Movie-Actor", (string)null);
                });

            modelBuilder.Entity("MVC_Group_Practice.Models.MovieGenre", b =>
                {
                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("MovieId")
                        .HasColumnType("int");

                    b.HasIndex("GenreId");

                    b.HasIndex("MovieId");

                    b.ToTable("Movie-Genre", (string)null);
                });

            modelBuilder.Entity("MVC_Group_Practice.Models.MovieActor", b =>
                {
                    b.HasOne("MVC_Group_Practice.Models.Actor", "Actor")
                        .WithMany()
                        .HasForeignKey("ActorId")
                        .HasConstraintName("FK_Movie-Actor_Actor");

                    b.HasOne("MVC_Group_Practice.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .HasConstraintName("FK_Movie-Actor_Movie");

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MVC_Group_Practice.Models.MovieGenre", b =>
                {
                    b.HasOne("MVC_Group_Practice.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreId")
                        .HasConstraintName("FK_Movie-Genre_Genre");

                    b.HasOne("MVC_Group_Practice.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .HasConstraintName("FK_Movie-Genre_Movie");

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });
#pragma warning restore 612, 618
        }
    }
}
